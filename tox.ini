[tox]
minversion = 2.0
envlist = py27,py36,py37,pypy,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
   OS_STDOUT_CAPTURE=1
   OS_STDERR_CAPTURE=1
   OS_TEST_TIMEOUT=500
whitelist_externals = find
deps =
       -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
         find . -type f -name "*.pyc" -delete
         ostestr {posargs}

[testenv:pep8]
basepython = python3
commands = flake8

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
setenv =
    VIRTUAL_ENV={envdir}
    PYTHON=coverage run --source os_testr --parallel-mode
commands =
    ostestr {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:docs]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands = python setup.py build_sphinx

[testenv:debug]
basepython = python3
commands = oslo_debug_helper {posargs}

[testenv:releasenotes]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf releasenotes/build
  sphinx-build -a -E -W -d releasenotes/build/doctrees \
         -b html releasenotes/source releasenotes/build/html
whitelist_externals = rm

[flake8]
# E123, E125 skipped as they are invalid PEP-8.
# E731 skipped as assign a lambda expression
# H405 skipped as it wrongly recognizes a multiline string as docstring

show-source = True
ignore = E123,E125,E731,H405
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build
